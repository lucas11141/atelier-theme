/*------------------------------------*/
/* Layout */
/*------------------------------------*/
@mixin inner {
	width: calc(100% - 2 * $outergap);
	max-width: $screen;
	margin: 0 auto;
	position: relative;
	@include remove-spacing-first;

	&.--small {
		max-width: 500px;
	}

	&.--ignore {
		width: 100vw;
		margin-top: 100px;
		margin-left: calc(-1 * (100vw - 1000px) / 2);

		@include bp-lower(1040px) {
			margin-left: -20px;
			padding-left: 20px;
			padding-right: 20px;
		}
	}
}

/*------------------------------------*/
/* Text */
/*------------------------------------*/
@mixin fluid-type($min-font-size, $max-font-size, $important: false) {
	$u3: unit($min-font-size);
	$u4: unit($max-font-size);

	@if $u3 == $u4 {
		& {
			@if $important {
				font-size: $min-font-size !important;
			} @else {
				font-size: $min-font-size;
			}

			@media screen and (min-width: $min-vw) {
				@if $important {
					font-size: calc(
						#{$min-font-size} +
							#{strip-unit($max-font-size - $min-font-size)} *
							((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
					) !important;
				} @else {
					font-size: calc(
						#{$min-font-size} +
							#{strip-unit($max-font-size - $min-font-size)} *
							((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
					);
				}
			}

			@media screen and (min-width: $max-vw) {
				@if $important {
					font-size: $max-font-size !important;
				} @else {
					font-size: $max-font-size;
				}
			}
		}
	}
}

@mixin text {
	@include fluid-type(15px, 16px);
	font-family: $main-font;
	line-height: 1.5;
	color: $text;

	&.--size-small {
		@include fluid-type(13px, 14px);
		color: $darkgray;
		line-height: 1.6;
	}
}

@mixin text-soft {
	@include fluid-type(13px, 14px);
	color: $text--soft;
}

@mixin heading {
	font-family: $main-font;
	font-weight: 800;
	text-transform: uppercase;
	line-height: 1.125;
	letter-spacing: inherit;
	color: $text;
	margin: 0px;
	padding: 15px 0px 0px;
	display: block;

	b,
	strong {
		font-weight: 500;
	}
}

@mixin heading-shop {
	font-family: 'gooddog-new';
	font-weight: 400;
	text-transform: uppercase;
	-webkit-text-stroke: 0.3px $main;

	@media only screen and (max-width: $tablet) {
		-webkit-text-stroke: unset !important;
		-webkit-text-stroke-width: 0px !important;
	}
}

@mixin h1() {
	@include heading;
	@include fluid-type(28px, 32px);

	body:has(#gtm-values[data-website-mode='shop']) & {
		@include heading-shop;
		@include fluid-type(28px, 36px);
	}
}

@mixin h2 {
	@include heading;
	@include fluid-type(24px, 32px);

	body:has(#gtm-values[data-website-mode='shop']) & {
		@include heading-shop;
		@include fluid-type(28px, 36px);
	}
}

@mixin h3 {
	@include heading;
	@include fluid-type(20px, 24px);

	body:has(#gtm-values[data-website-mode='shop']) & {
		@include heading-shop;
		@include fluid-type(21px, 24px);
	}
}

@mixin h4 {
	@include heading;
	@include fluid-type(17px, 20px);

	body:has(#gtm-values[data-website-mode='shop']) & {
		@include heading-shop;
		@include fluid-type(19px, 21px);
	}
}

@mixin h5 {
	@include heading;
	@include fluid-type(15px, 16px);

	body:has(#gtm-values[data-website-mode='shop']) & {
		color: $accent;
	}
}

@mixin h6 {
	@include heading;
	@include fluid-type(14px, 14px);
	color: $accent;
}

/*------------------------------------*/
/* Forms */
/*------------------------------------*/
@mixin label {
	@include fluid-type(13px, 14px);
	font-weight: 700;
	line-height: 1em;
	letter-spacing: 0.2px;
	color: $accent;
	padding: 0px 6px;
	background-color: white;
	display: block;
	position: absolute;
	top: 0;
	left: 14px;
	z-index: 1;

	.required {
		display: inline;
		padding: 0;
		border: none;
		text-decoration: none;
		position: static;
	}
}

@mixin input {
	padding-top: 7px !important;
	position: relative;

	&.--half {
		width: calc(50% - 10px);
	}

	&.--active {
		input,
		select,
		textarea {
			border-color: $main;
		}
	}

	&.--error {
		input,
		select,
		textarea {
			border-color: $red;
		}
	}

	@media only screen and (max-width: $tablet) {
		&.--half {
			width: 100%;
		}
	}
}

/*------------------------------------*/
/* Buttons / Links */
/*------------------------------------*/
/* Button Colors */
@mixin button-config($background-color, $font-color, $border-color: '') {
	background-color: $background-color;

	span {
		color: $font-color;
	}
	$background-color-dark: darken($background-color, 10%);
	$background-color-light: lighten($background-color, 10%);
	background-image: radial-gradient(
		circle,
		$background-color-dark 0%,
		$background-color-dark 10%,
		transparent 10%
	);
	&:focus,
	&:active {
		background-color: #274358;
		background-color: $background-color-light;
		background-image: radial-gradient(
			circle,
			$background-color-light 0%,
			$background-color-light 10%,
			transparent 10%
		);
	}
}

@mixin button-config-transparent($font-color) {
	background-color: transparent;
	span {
		color: $font-color;
	}
	background-image: radial-gradient(circle, $font-color 0%, $font-color 10%, transparent 10%);
}

// TODO: Simplify buttons
@mixin button {
	@include flex('row');
	display: inline-flex;
	justify-content: center;
	align-items: center;
	column-gap: 12px;
	padding: 16px 48px;
	border: solid 2px transparent;
	border-radius: 10px;
	transition: ease-in-out 200ms;
	cursor: pointer;

	&::after {
		content: unset;
	}

	&,
	span {
		font-family: $main-font;
		@include fluid-type(14px, 15px);
		color: white;
		font-weight: 700;
		line-height: 1em;
		letter-spacing: 0.3px;
		text-align: center;
		white-space: nowrap;
		text-transform: uppercase;
		text-decoration: none;
	}

	// Equal height with and without icon
	span {
		height: 20px;
		line-height: 150%;
		display: contents;
	}

	/* Hover Effect*/
	background-position: 50% 50%;
	background-repeat: no-repeat;
	background-size: 0%;
	transition: cubic-bezier(0.5, 0, 0.5, 1) 300ms background-size;

	&:hover,
	&:focus,
	&:active {
		transform: none;
		background-size: 1020%;
	}

	span {
		transition: cubic-bezier(0.5, 0, 0.5, 1) 300ms color;
	}

	img {
		transition: cubic-bezier(0.5, 0, 0.5, 1) 300ms filter;
	}

	&:disabled,
	&[disabled],
	&.--disabled {
		transition: none;
		pointer-events: none;
		cursor: default;
		opacity: 60%;

		&::before {
			transition: none;
		}
	}

	// Responsive
	@media only screen and (max-width: $desktop) {
		padding: 15px 38px;
	}

	@media only screen and (max-width: $mobile) {
		&:not(.popup__close) {
			width: 100%;
		}
	}

	/* Button Variations */
	&.--size-small,
	&.button--small {
		padding: 14px 33px;

		span {
			font-size: 14px;
		}

		@media only screen and (max-width: $desktop) {
			padding: 11px 30px;

			span,
			.button-text {
				font-size: 13px;
			}
		}
	}

	&.--size-mini,
	&.button--mini {
		padding: 9px 18px;

		&,
		span {
			font-size: 14px;
			font-weight: 700;
			text-transform: none;
		}
	}

	&.--size-tiny {
		padding: 9px 18px;
		border-radius: 8px;

		&,
		a,
		span {
			font-size: 14px;
			@include fluid-type(11px, 12px);
		}
	}

	&.--fixed,
	&.button--fixed {
		width: 100%;
		padding-left: 0px;
		padding-right: 0px;
		display: flex;
		flex-direction: row;
		flex-wrap: nowrap;
		justify-content: center;
		align-items: center;
	}

	&.--shop,
	&.button--shop {
		border-radius: 10px;

		span {
			font-style: normal;
			font-family: proxima-soft, sans-serif;
		}
	}

	// Colors
	@include button-config($accent, white);
	transition: all 300ms ease-in-out;

	&.--color {
		&-main {
			@include button-config($main, white);
		}

		&-main-light {
			@include button-config($main-light, white);
			background-image: radial-gradient(
				circle,
				lighten($main-light, 6%) 0%,
				lighten($main-light, 6%) 10%,
				transparent 10%
			);
		}

		&-accent,
		&-green {
			@include button-config($accent, white);
		}

		&-white {
			@include button-config(white, $main);
			.feather {
				stroke: $main;
				stroke-width: 2.5;
			}
		}

		&-gray {
			@include button-config($gray, $main);
			border: solid 1px $linegray;
		}

		&-transparent {
			@include button-config-transparent($main);
			border: solid 2.5px $main;

			span {
				margin: -2.5px;
			}

			&:hover {
				span {
					color: white;
				}
			}

			&-white {
				@include button-config-transparent(white);
				border: solid 2px white;

				span {
					color: white;
				}

				&:hover {
					span {
						color: $main;
					}
				}
			}
		}

		&-red {
			@include button-config($red, white);
		}

		&-course-child,
		&-blue {
			@include button-config($course-kinder, white);
		}

		&-course-adult,
		&-purple {
			@include button-config($course-erwachsene, white);
		}

		&-orange {
			@include button-config($workshop-kinder, white);
		}

		&-yellow {
			@include button-config($ferienprogramm, white);
		}

		&-pink {
			@include button-config($kunstevent, white);
		}

		&-current {
			// background-color: currentColor;
			@include button-config-transparent(currentColor);
		}
	}
}

@mixin button-link {
	padding: 6px 0;
	display: inline-flex;
	align-items: center;
	gap: 10px;
	text-decoration: none;
	transition: all $ease_standard 300ms;
	cursor: pointer;

	span {
		@include fluid-type(13px, 14px);
		font-weight: 700;
		line-height: 1.2;
	}

	// Direction variants
	&.--direction-left {
		.arrow {
			rotate: 180deg;
			order: -1;
		}
	}

	// Color variants
	&.--color {
		&-green .arrow path {
			fill: $accent;
		}

		&-blue .arrow path {
			fill: $course-kinder;
		}

		&-purple .arrow path {
			fill: $course-erwachsene;
		}

		&-orange .arrow path {
			fill: $workshop-kinder;
		}

		&-red .arrow path {
			fill: $workshop-erwachsene;
		}

		&-yellow .arrow path {
			fill: $ferienprogramm;
		}

		&-pink .arrow path {
			fill: $kunstevent;
		}
	}

	// Animations
	&:hover {
		transform: translateX(3px);

		&.--direction-left {
			transform: translateX(-3px);
		}
	}

	// Responsive
	@media only screen and (max-width: $tablet) {
		padding: 6px 0;

		svg {
			width: 7px;
		}
	}
}

@mixin hover-link {
	display: inline-block;
	padding-bottom: 3px;
	@include hover-slide-left;
	text-decoration: none;
	white-space: nowrap;
	position: relative;

	&::after {
		content: '';
		height: 1.5px;
		width: 0;
		background-color: $main;
		position: absolute;
		bottom: 0;
		right: 0;
		transition: all 300ms $ease_standard;
	}

	&:hover {
		&::after {
			width: 100%;
		}
	}
}

/*------------------------------------*/
/* New */
/*------------------------------------*/
// Breakpoints
@mixin bp-higher($variable) {
	@media (min-width: ($variable + 1px)) {
		@content;
	}
}
@mixin bp-lower($variable) {
	@media (max-width: $variable) {
		@content;
	}
}

// Centered background image
@mixin background-image($image) {
	background-repeat: no-repeat;
	background-size: contain;
	background-position: center;
	background-image: $image;
}

@mixin checkbox {
	display: flex !important;
	position: relative;
	cursor: pointer;

	input[type='checkbox'] {
		display: none;
	}

	&:before {
		content: '';
		display: block;
		margin-right: 10px;
		height: 22px;
		width: 22px;
		min-width: 22px;
		background-color: white;
		background-size: 12px;
		background-position: center;
		background-repeat: no-repeat;
		border-radius: 5px;
		border: solid $inputgray 2px;
	}

	span {
		padding-top: 0 !important;
		font-weight: 500 !important;
		color: $text;

		a {
			color: $accent;
			text-decoration: underline;

			&:hover {
				color: $accent--darken;
			}
		}
	}

	&:has(input:checked) {
		&:before {
			background-color: $accent;
			border-color: darken($accent, 10%);
			background-image: url('../img/shop/checkbox_checkmark.svg');
		}

		&:hover {
			&:before {
				border-color: darken($accent, 5%);
			}
		}
	}
}

/*------------------------------------*/
/* Global shop functions */
/*------------------------------------*/
@mixin shadow-box {
	box-shadow: 0px;
}

@mixin drop-shadow-shop {
	box-shadow: 2px 2px 30px rgba(black, 8%);
}

/*------------------------------------*/
/*  Flexbox Configurator */
/*------------------------------------*/
@mixin flex($variant: 'row', $gap: 0px) {
	display: flex;
	flex-wrap: nowrap;
	align-items: flex-start;
	justify-content: space-between;
	gap: $gap;

	@if $variant == 'row' {
		flex-direction: row;
	}

	@if $variant == 'column' {
		flex-direction: column;
	}

	@if $variant == 'center' {
		justify-content: center;
		align-items: center;
	}
}

/*------------------------------------*/
/* Section Name */
/*------------------------------------*/
@mixin flex-item-width($column-count, $gap) {
	width: calc((100% - ((#{$column-count} - 1) * #{$gap})) / #{$column-count});
}

@mixin grid-width($columns: 3) {
	width: calc(
		((#{$inner} - (5 * #{$gap-new})) / 6 * #{$columns}) + ((#{$columns} - 1) * #{$gap-new})
	);
	max-width: calc(
		((#{$inner} - (5 * #{$gap-new})) / 6 * #{$columns}) + ((#{$columns} - 1) * #{$gap-new})
	);
}

/*------------------------------------*/
/* Position */
/*------------------------------------*/
@mixin pos($variant: '') {
	position: absolute;

	@if $variant == 'center' {
		left: 50%;
		top: 50%;
		translate: -50% -50%;
	}

	@if $variant == 'cover' {
		height: 100%;
		width: 100%;
		object-fit: cover;
		top: 0;
		left: 0;
	}
}

/*------------------------------------*/
/* Misc */
/*------------------------------------*/
@mixin box-shadow {
	box-shadow: $shadow_stardard;
}

@mixin hide-text {
	color: transparent;
	font-size: 0;
}

@mixin hover-slide-left {
	transition: transform 300ms $ease_standard;

	&:hover {
		transform: translateX(-3px);
	}
}

@mixin dashed-border($color, $position) {
	background-image: linear-gradient(to right, $color 0, $color 8px, transparent 8px);
	background-position: $position;
	background-size: 16px 1px;
	background-repeat: repeat-x;
}

@mixin font-gooddog {
	font-family: 'gooddog-new';
	font-weight: 400;
	text-transform: uppercase;
	-webkit-text-stroke: 0.3px $main;

	@media only screen and (max-width: $tablet) {
		-webkit-text-stroke: unset !important;
		-webkit-text-stroke-width: 0px !important;
	}
}

@mixin hide-scrollbar {
	-ms-overflow-style: none; /* Internet Explorer 10+ */
	scrollbar-width: none; /* Firefox */

	&::-webkit-scrollbar {
		display: none; /* Safari and Chrome */
	}
}

@mixin dropshadow {
	box-shadow: 2px 2px 30px rgba(black, 8%);
}

@mixin loading {
	overflow: hidden;
	position: relative;

	&::after {
		content: '';
		height: 500%;
		width: 200px;
		background-image: linear-gradient(
			to right,
			rgba(#f9f9f9, 0%),
			#f9f9f9 40%,
			#f9f9f9 60%,
			rgba(#f9f9f9, 0%)
		);
		animation: paypal-loader-glance 2.5s ease-in-out infinite;
		position: absolute;
		top: 50%;
		transform: translateY(-50%) rotate(15deg);

		@keyframes paypal-loader-glance {
			from {
				left: calc(-200px - 100px);
			}
			to {
				left: calc(100% + 100px);
			}
		}
	}
}

@mixin click-bounce {
	&:active {
		transition-duration: 30ms;
		transform: scale(0.98);
	}
}

@mixin dark {
	:is(h1, h2, h3, h4, h5, h6) {
		font-weight: 700;
	}

	* {
		color: white;
	}
}

@mixin remove-spacing-first {
	> *:is(h1, h2, h3, h4, h5, h6, p, a, ul):not(.button):first-child {
		margin-top: 0;
		padding-top: 0;
	}
}

// TODO: Apply border to all similar items
@mixin box {
	padding: 25px 27px;
	border-radius: 15px;
	background-color: white;
	@include dropshadow;
	// border: solid 1px $box-border;
}

@mixin box-padding {
	padding: 25px 27px;
}
